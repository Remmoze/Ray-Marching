{"version":3,"sources":["reportWebVitals.js","redux/configSlice.jsx","redux/store.jsx","components/settings/gradient/colorItem.jsx","components/settings/gradient/colorsAdder.jsx","components/settings/common/speed.jsx","components/settings/modes/Blinking.jsx","components/settings/common/rotation.jsx","components/settings/modes/Gradient.jsx","components/settings/imageSlider/fileUploader.jsx","components/settings/modes/ImageSlider.jsx","components/settings/modes/Radial.jsx","components/settings/modeSelector.jsx","components/settings/SettingsContainer.jsx","components/settings/SettingsOverlay.jsx","components/display/windowSize.jsx","components/display/useCanvas.jsx","components/display/drawing/GradientFactory.jsx","components/display/drawing/canvasUpdate.jsx","components/display/drawing/PatternFactory.jsx","components/display/Canvas.jsx","content/city.jpg","components/display/useTimer.jsx","components/display/ImageDisplay.jsx","components/display/Display.jsx","components/MainContainer.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configSlice","createSlice","name","initialState","debug","mode","speed","rotation","Math","PI","colors","imageUrl","reducers","setImageUrl","state","payload","setColors","addColor","push","setColorByIndex","index","color","deleteColorByIndex","splice","setMode","setSpeed","setRotation","actions","rootReducer","combineReducers","config","configReducer","storage","configureStore","reducer","changeColor","dispatch","setError","strColor","s","Option","style","isColor","ColorItem","blockDelete","useState","error","useDispatch","ListItem","disablePadding","ml","mr","sx","width","height","backgroundColor","border","borderColor","borderRadius","opacity","ListItemText","TextField","onChange","target","value","id","variant","defaultValue","IconButton","disabled","onClick","ColorsList","useSelector","Grid","item","mt","container","direction","alignItems","length","floor","random","toString","toUpperCase","List","bgcolor","TransitionGroup","map","Collapse","Divider","clamp","val","min","max","ceil","changeSpeed","newSliderValue","setSliderValue","extreme","coef","getCoefficientFromSlider","Speed","minVal","maxVal","window","disp","ss","setExtreme","sliderValue","Checkbox","checked","changeExtreme","size","Typography","fontSize","Slider","e","step","valueLabelDisplay","Blinking","displayName","children","Rotation","angle","rotationValue","setRotationValue","toFixed","changeRotation","Gradient","FileUploader","currentImageUrl","setCurrentImageUrl","uploadInputRef","useRef","ref","type","accept","image","currentUrl","setCurrentUrl","URL","revokeObjectURL","newUrl","createObjectURL","loadFile","files","hidden","Button","current","click","ImageSlider","Radial","Mode","modes","mb","FormControl","fullWidth","InputLabel","Select","label","MenuItem","find","child","SettingsContainer","spacing","padding","justifyContent","gutterBottom","SettingsOverlay","Box","position","top","left","maxWidth","SettingsRef","React","forwardRef","props","AnimatedSettingsOverlay","active","Slide","timeout","enter","exit","easing","in","appear","mountOnEnter","unmountOnExit","useWindowSize","innerWidth","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useCanvas","draw","displayImage","setdisplayImage","canvasRef","animationFrameId","context","getContext","frameCount","src","Promise","resolve","reject","Image","render","requestAnimationFrame","cancelAnimationFrame","getRadius","canvas","realRadius","sqrt","getRealRadius","colorStopWidth","radius","getColorStopWidth","getSpeed","addColorStops","gradient","i","colorOffset","addColorStop","createGradientType","x1","cos","y1","sin","x2","y2","createLinearGradient","getLinearGradient","createFillStyle","createGradient","createBlinking","createRadialGradient","getRadialGradient","createRadial","createPattern","getImagePattern","createImageSlider","CanvasUpdate","fillStyle","fillRect","font","textAlign","fillText","drawDefault","drawUpdate","beginPath","arc","fill","drawDebug","Canvas","useTimer","callback","requestRef","previousTimeRef","animate","time","undefined","deltaTime","ImageDisplay","winWidth","winHeight","offset","setOffset","dt","prev","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","Display","MainContainer","setCheck","bottom","theme","createTheme","palette","App","store","StrictMode","ThemeProvider","CssBaseline","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e0c671f4.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst configSlice = createSlice({\r\n    name: \"config\",\r\n    initialState: {\r\n        debug: false,\r\n        mode: \"blinking\",\r\n        speed: 100,\r\n        rotation: (Math.PI * 5) / 8, //radians\r\n        colors: [\r\n            \"#FF0000\", // Red\r\n            \"#FFA500\", // Orange\r\n            \"#FFFF00\", // Yellow\r\n            \"#008000\", // Green\r\n            \"#0000FF\", // Blue\r\n            \"#4B0082\", // Indigo\r\n            \"#EE82EE\", // Violet\r\n        ],\r\n        imageUrl: null,\r\n    },\r\n    reducers: {\r\n        setImageUrl: (state, { payload }) => {\r\n            state.imageUrl = payload;\r\n        },\r\n\r\n        /*\r\n            Should add a smooth transition between colors\r\n            https://stackoverflow.com/questions/30196043/how-to-display-a-smoother-gradient-in-html5-canvas\r\n            https://stackoverflow.com/questions/21835739/smooth-color-transition-algorithm\r\n        */\r\n\r\n        setColors: (state, { payload }) => {\r\n            state.colors = payload;\r\n        },\r\n        addColor: (state, { payload }) => {\r\n            state.colors.push(payload);\r\n        },\r\n        setColorByIndex: (state, { payload }) => {\r\n            state.colors[payload.index] = payload.color;\r\n        },\r\n        deleteColorByIndex: (state, { payload }) => {\r\n            state.colors.splice(payload, 1);\r\n        },\r\n\r\n        setMode: (state, { payload }) => {\r\n            state.mode = payload;\r\n        },\r\n        setSpeed: (state, { payload }) => {\r\n            state.speed = payload;\r\n        },\r\n        setRotation: (state, { payload }) => {\r\n            state.rotation = payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setImageUrl, setMode, setSpeed, setRotation, addColor, setColorByIndex, deleteColorByIndex } =\r\n    configSlice.actions;\r\n\r\nexport default configSlice.reducer;\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport configReducer from \"./configSlice\";\r\n\r\nconst rootReducer = combineReducers({\r\n    config: configReducer,\r\n});\r\n\r\nconst storage = configureStore({\r\n    reducer: rootReducer,\r\n});\r\n\r\nexport default storage;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nimport { IconButton, TextField } from \"@mui/material\";\r\nimport { ListItem, ListItemText } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nimport { deleteColorByIndex, setColorByIndex } from \"../../../redux/configSlice\";\r\n\r\nconst isColor = (strColor) => {\r\n    const s = new Option().style;\r\n    s.color = strColor;\r\n    return s.color !== \"\";\r\n};\r\n\r\nconst changeColor = (dispatch, index, color, setError) => {\r\n    if (!isColor(color)) {\r\n        setError(true);\r\n        return;\r\n    }\r\n    setError(false);\r\n    dispatch(setColorByIndex({ index, color }));\r\n};\r\n\r\nconst ColorItem = ({ color, index, blockDelete }) => {\r\n    const [error, setError] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <ListItem disablePadding>\r\n            <Box\r\n                ml={1}\r\n                mr={1}\r\n                sx={{\r\n                    width: 70,\r\n                    height: 25,\r\n                    backgroundColor: color,\r\n                    border: 2,\r\n                    borderColor: \"#aaaaaa\",\r\n                    borderRadius: 2,\r\n                    \"&:hover\": {\r\n                        backgroundColor: color,\r\n                        opacity: [0.8, 0.8, 0.8],\r\n                    },\r\n                }}\r\n            />\r\n\r\n            <ListItemText>\r\n                <TextField\r\n                    onChange={({ target }) => changeColor(dispatch, index, target.value, setError)}\r\n                    id=\"standard-basic\"\r\n                    variant=\"standard\"\r\n                    color={error ? \"error\" : \"primary\"}\r\n                    defaultValue={color}\r\n                />\r\n            </ListItemText>\r\n            <IconButton\r\n                disabled={blockDelete}\r\n                onClick={() => {\r\n                    dispatch(deleteColorByIndex(index));\r\n                }}\r\n            >\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nexport default ColorItem;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nimport { Grid, IconButton } from \"@mui/material\";\r\nimport { List, Divider } from \"@mui/material\";\r\nimport { Collapse } from \"@mui/material\";\r\n\r\nimport { addColor } from \"../../../redux/configSlice\";\r\nimport ColorItem from \"./colorItem\";\r\n\r\nimport { TransitionGroup } from \"react-transition-group\";\r\n\r\nconst RandomColor = () => {\r\n    return (\r\n        \"#\" +\r\n        Math.floor(Math.random() * 16777215)\r\n            .toString(16)\r\n            .toUpperCase()\r\n    );\r\n};\r\n\r\nconst ColorsList = () => {\r\n    const config = useSelector((storage) => storage.config);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Grid item mt={-1}>\r\n            <Grid container direction=\"row\" alignItems=\"center\">\r\n                <Grid item>Colors</Grid>\r\n                <Grid item>\r\n                    <IconButton disabled={config.colors.length >= 9} onClick={() => dispatch(addColor(RandomColor()))}>\r\n                        <AddIcon />\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n            <List sx={{ width: \"100%\", bgcolor: \"#00000050\", borderRadius: 3 }}>\r\n                <TransitionGroup>\r\n                    {config.colors.map((color, index) => (\r\n                        <Collapse key={color}>\r\n                            {index !== 0 && <Divider />}\r\n                            <ColorItem blockDelete={config.colors.length < 2} color={color} index={index}></ColorItem>\r\n                        </Collapse>\r\n                    ))}\r\n                </TransitionGroup>\r\n            </List>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default ColorsList;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Checkbox, Typography, Grid, Slider } from \"@mui/material\";\r\n\r\nimport { setSpeed } from \"../../../redux/configSlice\";\r\n\r\n/*\r\n    f(x) = -x/max+1\r\n    gives a reverse coefficient map 0-100 -> 1-0\r\n\r\n    100 - 101.0102\r\n    150 - 151.5152\r\n    small modifications to make f(max) = 0.01\r\n*/\r\n\r\nfunction clamp(val, min, max) {\r\n    return Math.ceil(Math.floor(val, max), min);\r\n}\r\n\r\nconst getCoefficientFromSlider = (value, extreme) => -value / (extreme ? 151.5152 : 101.0102) + 1;\r\n\r\nconst changeSpeed = (newSliderValue, setSliderValue, dispatch, extreme, min, max) => {\r\n    if (extreme) min = 1;\r\n    setSliderValue(newSliderValue);\r\n    let coef = getCoefficientFromSlider(newSliderValue, extreme);\r\n    dispatch(setSpeed((max - min) * coef + min));\r\n};\r\n\r\nconst changeExtreme = (checked, setExtreme, sliderValue, setSliderValue, dispatch, min, max) => {\r\n    if (checked) sliderValue = clamp(sliderValue, 0, 150);\r\n    else sliderValue = clamp(sliderValue, 0, 100);\r\n    setExtreme(checked);\r\n    changeSpeed(sliderValue, setSliderValue, dispatch, checked, min, max);\r\n};\r\n\r\nconst Speed = ({ minVal, maxVal }) => {\r\n    minVal = minVal || 10;\r\n    maxVal = maxVal || 110;\r\n    //const configSpeed = useSelector((storage) => storage.config.speed);\r\n    const dispatch = useDispatch();\r\n    window.disp = dispatch;\r\n    window.ss = setSpeed;\r\n\r\n    const [extreme, setExtreme] = useState(false);\r\n    const [sliderValue, setSliderValue] = useState(50); // slider 0-100\r\n    return (\r\n        <>\r\n            <Grid container direction=\"row\" alignItems=\"center\">\r\n                <Grid item>Speed</Grid>\r\n                <Grid item ml={1} mr={-1}>\r\n                    <Checkbox\r\n                        onChange={({ target }) =>\r\n                            changeExtreme(\r\n                                target.checked,\r\n                                setExtreme,\r\n                                sliderValue,\r\n                                setSliderValue,\r\n                                dispatch,\r\n                                minVal,\r\n                                maxVal\r\n                            )\r\n                        }\r\n                        color=\"error\"\r\n                        size=\"small\"\r\n                        checked={extreme}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography fontSize={10}>Extreme mode</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid mt={-1} item>\r\n                <Slider\r\n                    onChange={(e, value) => changeSpeed(value, setSliderValue, dispatch, extreme, minVal, maxVal)}\r\n                    defaultValue={sliderValue}\r\n                    min={0}\r\n                    max={extreme ? 150 : 100}\r\n                    step={1}\r\n                    value={sliderValue}\r\n                    valueLabelDisplay=\"auto\"\r\n                />\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Speed;\r\n","import ColorsList from \"../gradient/colorsAdder\";\r\nimport Speed from \"../common/speed\";\r\n\r\nconst Blinking = {\r\n    name: \"blinking\",\r\n    displayName: \"Blinking\",\r\n    children: [<Speed key={\"BlinkingSpeed\"} />, <ColorsList key={\"BlinkingColorsList\"} />],\r\n};\r\n\r\nexport default Blinking;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Grid, Slider } from \"@mui/material\";\r\n\r\nimport { setRotation } from \"../../../redux/configSlice\";\r\n\r\nconst getRotationLabel = (angle) => {\r\n    return `${angle.toFixed(2)} rad / ${((angle * 180) / Math.PI).toFixed(2)} degrees`;\r\n};\r\n\r\nconst changeRotation = (rotation, setRotationValue, dispatch) => {\r\n    setRotationValue(rotation);\r\n    dispatch(setRotation(rotation));\r\n};\r\n\r\nconst Rotation = () => {\r\n    const config = useSelector((storage) => storage.config);\r\n    const dispatch = useDispatch();\r\n    const [rotationValue, setRotationValue] = useState(config.rotation);\r\n    return (\r\n        <>\r\n            <Grid item>Rotation - {getRotationLabel(config.rotation)}</Grid>\r\n            <Grid item>\r\n                <Slider\r\n                    onChange={(e, value) => changeRotation(value, setRotationValue, dispatch)}\r\n                    defaultValue={rotationValue}\r\n                    min={0}\r\n                    max={Math.PI * 2}\r\n                    //step={Math.PI / 4}\r\n                    step={0.01}\r\n                    value={rotationValue}\r\n                    valueLabelDisplay=\"off\"\r\n                />\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Rotation;\r\n","import Rotation from \"../common/rotation\";\r\nimport Speed from \"../common/speed\";\r\nimport ColorsList from \"../gradient/colorsAdder\";\r\n\r\nconst Gradient = {\r\n    name: \"gradient\",\r\n    displayName: \"Gradient\",\r\n    children: [\r\n        <Speed key={\"GradientSpeed\"} />,\r\n        <Rotation key={\"GradientRotation\"} />,\r\n        <ColorsList key={\"GradientColorsList\"} />,\r\n    ],\r\n};\r\n\r\nexport default Gradient;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Button } from \"@mui/material\";\r\nimport { setImageUrl } from \"../../../redux/configSlice\";\r\n\r\nconst loadFile = (image, dispatch, currentUrl, setCurrentUrl) => {\r\n    if (currentUrl !== null) {\r\n        window.URL.revokeObjectURL(currentUrl);\r\n    }\r\n    let newUrl = window.URL.createObjectURL(image);\r\n    dispatch(setImageUrl(newUrl));\r\n    setCurrentUrl(newUrl);\r\n};\r\n\r\nconst FileUploader = () => {\r\n    const dispatch = useDispatch();\r\n    const [currentImageUrl, setCurrentImageUrl] = useState(null);\r\n\r\n    const uploadInputRef = useRef(null);\r\n    return (\r\n        <>\r\n            <input\r\n                ref={uploadInputRef}\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={({ target }) => loadFile(target.files[0], dispatch, currentImageUrl, setCurrentImageUrl)}\r\n                hidden\r\n            />\r\n            <Button onClick={() => uploadInputRef.current && uploadInputRef.current.click()} variant=\"outlined\">\r\n                Upload image\r\n            </Button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FileUploader;\r\n","import FileUploader from \"../imageSlider/fileUploader\";\r\nimport Speed from \"../common/speed\";\r\nimport Rotation from \"../common/rotation\";\r\n\r\nconst ImageSlider = {\r\n    name: \"image\",\r\n    displayName: \"Image\",\r\n    children: [\r\n        <Speed minVal={1} maxVal={200} key={\"ImageSpeed\"} />,\r\n        <Rotation key={\"ImageRotation\"} />,\r\n        <FileUploader key={\"ImageFileUploader\"} />,\r\n    ],\r\n};\r\n\r\nexport default ImageSlider;\r\n","import ColorsList from \"../gradient/colorsAdder\";\r\nimport Speed from \"../common/speed\";\r\n\r\nconst Radial = {\r\n    name: \"radial\",\r\n    displayName: \"Radial\",\r\n    children: [<Speed key={\"RadialSpeed\"} />, <ColorsList key={\"RadialColorsList\"} />],\r\n};\r\n\r\nexport default Radial;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Grid, FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\r\n\r\nimport { setMode } from \"../../redux/configSlice\";\r\n\r\nimport Blinking from \"./modes/Blinking\";\r\nimport Gradient from \"./modes/Gradient\";\r\nimport ImageSlider from \"./modes/ImageSlider\";\r\nimport Radial from \"./modes/Radial\";\r\n\r\nconst Mode = () => {\r\n    const config = useSelector((storage) => storage.config);\r\n    const dispatch = useDispatch();\r\n\r\n    let modes = [Blinking, Gradient, Radial, ImageSlider];\r\n\r\n    const changeMode = ({ target }) => dispatch(setMode(target.value));\r\n\r\n    return (\r\n        <>\r\n            <Grid item mb={1}>\r\n                <FormControl fullWidth>\r\n                    <InputLabel>Display mode</InputLabel>\r\n                    <Select value={config.mode} label=\"Display mode\" onChange={changeMode}>\r\n                        {modes.map((mode) => (\r\n                            <MenuItem key={mode.name} value={mode.name}>\r\n                                {mode.displayName}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            {modes.find((mode) => mode.name === config.mode).children.map((child) => child)}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Mode;\r\n","import React from \"react\";\r\n//import { useSelector, useDispatch } from \"react-redux\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\n\r\nimport Mode from \"./modeSelector\";\r\n\r\nconst SettingsContainer = () => {\r\n    //const config = useSelector((storage) => storage.config);\r\n    //const dispatch = useDispatch();\r\n    return (\r\n        <Grid container spacing={2} sx={{ padding: 2 }}>\r\n            <Grid container justifyContent=\"center\" item mb={-1}>\r\n                <Typography gutterBottom variant=\"h5\">\r\n                    Settings\r\n                </Typography>\r\n            </Grid>\r\n\r\n            <Grid container direction=\"column\" item>\r\n                <Mode />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default SettingsContainer;\r\n","import React from \"react\";\r\nimport { Box, Slide } from \"@mui/material\";\r\nimport SettingsContainer from \"./SettingsContainer\";\r\n\r\nconst SettingsOverlay = () => {\r\n    return (\r\n        <Box\r\n            sx={{\r\n                position: \"absolute\",\r\n                top: 7,\r\n                left: 7,\r\n                width: \"100%\",\r\n                maxWidth: 350,\r\n                backgroundColor: \"#101020a0\",\r\n                borderRadius: 3,\r\n            }}\r\n        >\r\n            <SettingsContainer />\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst SettingsRef = React.forwardRef((props, ref) => {\r\n    return (\r\n        <div ref={ref} {...props}>\r\n            <SettingsOverlay />\r\n        </div>\r\n    );\r\n});\r\n\r\nconst AnimatedSettingsOverlay = ({ active }) => {\r\n    return (\r\n        <Slide\r\n            timeout={{ enter: 3e2, exit: 1e3 }}\r\n            easing={{ enter: \"cubic-bezier(0, 0.5, 1, 1)\" }}\r\n            direction=\"right\"\r\n            in={active}\r\n            appear={false}\r\n            mountOnEnter\r\n            unmountOnExit\r\n        >\r\n            <SettingsRef />\r\n        </Slide>\r\n    );\r\n};\r\n\r\nexport { AnimatedSettingsOverlay };\r\nexport default SettingsOverlay;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useWindowSize = () => {\r\n    const [windowSize, setWindowSize] = useState([window.innerWidth, window.innerHeight]);\r\n    useEffect(() => {\r\n        const handleResize = () => setWindowSize([window.innerWidth, window.innerHeight]);\r\n\r\n        window.addEventListener(\"resize\", () => handleResize());\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n\r\n    return windowSize;\r\n};\r\n\r\nexport default useWindowSize;\r\n","import { useState, useRef, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst createNewImage = (newUrl) => {\r\n    return new Promise((resolve, reject) => {\r\n        const image = new Image();\r\n        image.src = newUrl;\r\n        image.addEventListener(\"load\", (e) => {\r\n            resolve(image);\r\n        });\r\n    });\r\n};\r\n\r\nconst useCanvas = (draw) => {\r\n    const [displayImage, setdisplayImage] = useState(null);\r\n\r\n    const canvasRef = useRef(null);\r\n    const config = useSelector((storage) => storage.config);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext(\"2d\");\r\n        let frameCount = 0;\r\n        let animationFrameId;\r\n\r\n        if (config.imageUrl !== null && (displayImage === null || config.imageUrl !== displayImage.src)) {\r\n            createNewImage(config.imageUrl).then((image) => {\r\n                setdisplayImage(image);\r\n            });\r\n        }\r\n\r\n        const render = () => {\r\n            frameCount++;\r\n            draw(context, frameCount, config, displayImage);\r\n            animationFrameId = window.requestAnimationFrame(render);\r\n        };\r\n        render();\r\n\r\n        return () => {\r\n            window.cancelAnimationFrame(animationFrameId);\r\n        };\r\n    }, [draw, config, displayImage]);\r\n\r\n    return canvasRef;\r\n};\r\n\r\nexport default useCanvas;\r\n","const getRealRadius = (canvas) => {\r\n    return Math.sqrt(canvas.width ** 2 + canvas.height ** 2) / 2;\r\n};\r\n\r\nconst getColorStopWidth = (radius, colors) => {\r\n    return (radius * 2) / colors.length;\r\n};\r\n\r\nconst getRadius = (canvas, colors, mode) => {\r\n    //circumscribed circle around canvas rectangle\r\n    let realRadius = getRealRadius(canvas);\r\n\r\n    //how much space one color takes up\r\n    let colorStopWidth = getColorStopWidth(realRadius, colors);\r\n\r\n    let radius = 0;\r\n    if (mode === \"blinking\") {\r\n        // set circumscribed circle's radius to a color stop\r\n        radius = realRadius * colorStopWidth;\r\n    } else if (mode === \"gradient\" || mode === \"radial\") {\r\n        //increase circumscribed circle's radius by a color stop\r\n        radius = realRadius + colorStopWidth;\r\n    }\r\n\r\n    return radius;\r\n};\r\n\r\nconst getLinearGradient = (context, rotation, radius) => {\r\n    let canvas = context.canvas;\r\n    //calculate location of points on a circle based on rotation\r\n    let x1 = Math.cos(-rotation + Math.PI) * radius + canvas.width / 2;\r\n    let y1 = Math.sin(-rotation + Math.PI) * radius + canvas.height / 2;\r\n    let x2 = Math.cos(-rotation) * radius + canvas.width / 2;\r\n    let y2 = Math.sin(-rotation) * radius + canvas.height / 2;\r\n\r\n    return context.createLinearGradient(x1, y1, x2, y2);\r\n};\r\n\r\nconst getRadialGradient = (context, radius) => {\r\n    let canvas = context.canvas;\r\n    return context.createRadialGradient(\r\n        canvas.width / 2,\r\n        canvas.height / 2,\r\n        0,\r\n        canvas.width / 2,\r\n        canvas.height / 2,\r\n        radius\r\n    );\r\n};\r\n\r\nconst getSpeed = (frameCount, speed) => frameCount / speed;\r\n\r\n/* ------------------------------ */\r\n\r\n/* BROKEN\r\nconst addColorStops = (gradient, speed, colors) => {\r\n    let minOffset = 1;\r\n    let baseColorIndex = null;\r\n\r\n    for (let i = 0; i < colors.length; i++) {\r\n        let colorOffset = ((i + speed) % colors.length) / colors.length;\r\n\r\n        if (colorOffset < minOffset) {\r\n            minOffset = colorOffset;\r\n            baseColorIndex = i;\r\n        }\r\n\r\n        gradient.addColorStop(colorOffset, colors[i]);\r\n    }\r\n    if (baseColorIndex + speed > 0.001) {\r\n        let baseIndex = (baseColorIndex - 1 + colors.length) % colors.length;\r\n        gradient.addColorStop(0, colors[baseIndex]);\r\n    }\r\n    return gradient;\r\n};\r\n*/\r\n\r\nconst addColorStops = (gradient, speed, colors) => {\r\n    for (let i = 0; i < colors.length; i++) {\r\n        let colorOffset = ((i + speed) % colors.length) / colors.length;\r\n        gradient.addColorStop(colorOffset, colors[i]);\r\n    }\r\n    return gradient;\r\n};\r\n\r\n/* ------------------------------ */\r\n\r\nconst createGradientType = (context, config, frameCount, mode) => {\r\n    let canvas = context.canvas;\r\n    const radius = getRadius(canvas, config.colors, mode);\r\n    const gradient = getLinearGradient(context, config.rotation, radius);\r\n\r\n    return addColorStops(gradient, getSpeed(frameCount, config.speed), config.colors);\r\n};\r\n\r\n//Have to fix: Transition between colors is flickering when there are only few colors\r\nconst createGradient = (context, config, frameCount) => {\r\n    return createGradientType(context, config, frameCount, \"gradient\");\r\n};\r\n\r\nconst createBlinking = (context, config, frameCount) => {\r\n    return createGradientType(context, config, frameCount, \"blinking\");\r\n};\r\n\r\nconst createRadial = (context, config, frameCount) => {\r\n    let canvas = context.canvas;\r\n    const radius = getRadius(canvas, config.colors, \"radial\");\r\n    const gradient = getRadialGradient(context, radius);\r\n\r\n    return addColorStops(gradient, getSpeed(frameCount, config.speed), config.colors);\r\n};\r\n\r\nexport { createGradient, createBlinking, createRadial };\r\n","import { createBlinking, createGradient, createRadial } from \"./GradientFactory\";\r\nimport { createImageSlider } from \"./PatternFactory\";\r\n\r\nconst drawDebug = (context, frameCount) => {\r\n    const canvas = context.canvas;\r\n    let radius = 80;\r\n    context.fillStyle = \"#ffffffa0\";\r\n    context.beginPath();\r\n    context.arc(\r\n        canvas.width - radius - 10,\r\n        canvas.height - radius - 10,\r\n        radius * Math.sin(frameCount * 0.05) ** 2,\r\n        0,\r\n        2 * Math.PI\r\n    );\r\n    context.fill();\r\n};\r\n\r\nconst drawDefault = (context) => {\r\n    const canvas = context.canvas;\r\n    context.fillStyle = \"black\";\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n    context.font = \"48px courier\";\r\n    context.textAlign = \"center\";\r\n    context.fillStyle = \"white\";\r\n    context.fillText(\"No input\", canvas.width / 2, canvas.height / 2);\r\n};\r\n\r\nconst createFillStyle = (context, config, frameCount, image) => {\r\n    switch (config.mode) {\r\n        case \"gradient\":\r\n            return createGradient(context, config, frameCount);\r\n        case \"blinking\":\r\n            return createBlinking(context, config, frameCount);\r\n        case \"radial\":\r\n            return createRadial(context, config, frameCount);\r\n        case \"image\": {\r\n            if (image !== null) return createImageSlider(context, image);\r\n            return null;\r\n        }\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\nconst drawUpdate = (context, config) => {\r\n    const canvas = context.canvas;\r\n    switch (config.mode) {\r\n        case \"gradient\":\r\n        case \"blinking\":\r\n        case \"radial\": {\r\n            context.fillRect(0, 0, canvas.width, canvas.height);\r\n            break;\r\n        }\r\n        default:\r\n            break;\r\n    }\r\n\r\n    if (config.mode === \"image\") {\r\n        context.fillRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n};\r\n\r\nconst CanvasUpdate = (context, frameCount, config, image) => {\r\n    drawDefault(context);\r\n\r\n    let fillStyle = createFillStyle(context, config, frameCount, image);\r\n    if (fillStyle !== null) {\r\n        context.fillStyle = fillStyle;\r\n        drawUpdate(context, config);\r\n    }\r\n\r\n    if (config.debug) {\r\n        drawDebug(context, frameCount);\r\n    }\r\n};\r\n\r\nexport default CanvasUpdate;\r\n","const getImagePattern = (context, image) => {\r\n    let pattern = context.createPattern(image, \"repeat\"); //change repeat to config.repetition pattern\r\n    return pattern;\r\n};\r\n\r\n/* ------------------------------ */\r\n\r\nconst createImageSlider = (context, image) => {\r\n    return getImagePattern(context, image);\r\n};\r\n\r\nexport { createImageSlider };\r\n","import React from \"react\";\r\nimport useWindowSize from \"./windowSize\";\r\n\r\nimport useCanvas from \"./useCanvas\";\r\n\r\nimport CanvasUpdate from \"./drawing/canvasUpdate\";\r\n\r\nconst Canvas = () => {\r\n    const [width, height] = useWindowSize();\r\n    const canvasRef = useCanvas(CanvasUpdate);\r\n\r\n    return <canvas ref={canvasRef} width={width} height={height} />;\r\n};\r\n\r\nexport default Canvas;\r\n","export default __webpack_public_path__ + \"static/media/city.ea63c51b.jpg\";","import React, { useEffect } from \"react\";\r\n\r\nconst useTimer = (callback) => {\r\n    const requestRef = React.useRef();\r\n    const previousTimeRef = React.useRef();\r\n\r\n    useEffect(() => {\r\n        const animate = (time) => {\r\n            if (previousTimeRef.current !== undefined) {\r\n                const deltaTime = time - previousTimeRef.current;\r\n                callback(deltaTime);\r\n            }\r\n            previousTimeRef.current = time;\r\n            requestRef.current = requestAnimationFrame(animate);\r\n        };\r\n\r\n        requestRef.current = requestAnimationFrame(animate);\r\n        return () => cancelAnimationFrame(requestRef.current);\r\n    }, [callback]);\r\n};\r\n\r\nexport default useTimer;\r\n","import React, { useState } from \"react\";\r\nimport useWindowSize from \"./windowSize\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nimport Image from \"../../content/city.jpg\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useTimer from \"./useTimer\";\r\n\r\nconst ImageDisplay = () => {\r\n    const speed = useSelector((storage) => storage.config.speed);\r\n    const [winWidth, winHeight] = useWindowSize();\r\n    const [offset, setOffset] = useState(0);\r\n\r\n    useTimer((dt) => {\r\n        setOffset((prev) => {\r\n            return prev + speed / 500;\r\n        });\r\n    });\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                width: winWidth,\r\n                height: winHeight,\r\n                backgroundImage: `url(${Image})`,\r\n                backgroundSize: \"contain\",\r\n                backgroundPosition: offset + \"%\",\r\n                backgroundRepeat: \"repeat\",\r\n                //transform: \"rotate(20deg)\",\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ImageDisplay;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Canvas from \"./Canvas\";\r\nimport ImageDisplay from \"./ImageDisplay\";\r\n\r\nconst Display = () => {\r\n    const mode = useSelector((storage) => storage.config.mode);\r\n    if (mode === \"image\") return <ImageDisplay />;\r\n    return <Canvas />;\r\n};\r\n\r\nexport default Display;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AnimatedSettingsOverlay } from \"./settings/SettingsOverlay\";\r\nimport Display from \"./display/Display\";\r\nimport { Checkbox } from \"@mui/material\";\r\n\r\nconst MainContainer = () => {\r\n    const [checked, setCheck] = useState(true);\r\n    return (\r\n        <div>\r\n            <Checkbox\r\n                sx={{\r\n                    position: \"absolute\",\r\n                    bottom: 7,\r\n                    left: 7,\r\n                }}\r\n                checked={checked}\r\n                onChange={({ target }) => setCheck(target.checked)}\r\n            />\r\n            <AnimatedSettingsOverlay active={checked} />\r\n            <Display />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { CssBaseline, ThemeProvider, createTheme } from \"@mui/material\";\n\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\nimport storage from \"./redux/store\";\n\nimport MainContainer from \"./components/MainContainer\";\n\nconst theme = createTheme({\n    palette: {\n        mode: \"dark\",\n    },\n    spacing: 8,\n});\n\nconst App = () => {\n    return (\n        <Provider store={storage}>\n            <React.StrictMode>\n                <ThemeProvider theme={theme}>\n                    <CssBaseline />\n\n                    <MainContainer />\n                </ThemeProvider>\n            </React.StrictMode>\n        </Provider>\n    );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
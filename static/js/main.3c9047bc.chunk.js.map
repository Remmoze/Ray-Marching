{"version":3,"sources":["redux/configSlice.jsx","redux/store.jsx","components/settings/gradient/colorItem.jsx","components/settings/gradient/colorsAdder.jsx","components/settings/common/speed.jsx","components/settings/modes/Blinking.jsx","components/settings/common/rotation.jsx","components/settings/modes/Gradient.jsx","components/settings/imageSlider/fileUploader.jsx","components/settings/modes/ImageSlider.jsx","components/settings/modes/Radial.jsx","components/settings/common/count.jsx","components/settings/modes/Dots.jsx","components/settings/modeSelector.jsx","components/settings/SettingsContainer.jsx","components/settings/SettingsOverlay.jsx","components/display/canvas/windowSize.jsx","components/display/canvas/useCanvas.jsx","components/display/drawing/GradientFactory.jsx","components/display/drawing/display modes/Dots/Vector2.js","components/display/drawing/display modes/Dots/Dot.js","components/display/drawing/display modes/dots.js","components/display/drawing/canvasUpdate.jsx","components/display/drawing/display modes/gradient.js","components/display/drawing/display modes/blinking.js","components/display/drawing/display modes/radial.js","components/display/drawing/PatternFactory.jsx","components/display/canvas/Canvas.jsx","content/city.jpg","components/display/canvas/useTimer.jsx","components/display/canvas/ImageDisplay.jsx","components/display/canvas/Display.jsx","components/MainContainer.jsx","index.js"],"names":["configSlice","createSlice","name","initialState","debug","mode","speed","rotation","Math","PI","colors","imageUrl","dotsCount","dotsMaxDistance","reducers","setImageUrl","state","payload","setColors","addColor","push","setColorByIndex","index","color","deleteColorByIndex","splice","setMode","setSpeed","setRotation","setCount","actions","rootReducer","combineReducers","config","configReducer","storage","configureStore","reducer","changeColor","dispatch","setError","strColor","s","Option","style","isColor","ColorItem","blockDelete","useState","error","useDispatch","ListItem","disablePadding","ml","mr","sx","width","height","backgroundColor","border","borderColor","borderRadius","opacity","ListItemText","TextField","onChange","target","value","id","variant","defaultValue","IconButton","disabled","onClick","ColorsList","useSelector","Grid","item","mt","container","direction","alignItems","length","floor","random","toString","toUpperCase","List","bgcolor","TransitionGroup","map","Collapse","Divider","clamp","val","min","max","ceil","changeSpeed","newSliderValue","setSliderValue","extreme","coef","getCoefficientFromSlider","Speed","minVal","maxVal","window","disp","ss","setExtreme","sliderValue","Checkbox","checked","changeExtreme","size","Typography","fontSize","Slider","e","step","valueLabelDisplay","Blinking","displayName","children","Rotation","angle","rotationValue","setRotationValue","toFixed","changeRotation","Gradient","FileUploader","currentImageUrl","setCurrentImageUrl","uploadInputRef","useRef","ref","type","accept","image","currentUrl","setCurrentUrl","URL","revokeObjectURL","newUrl","createObjectURL","loadFile","files","hidden","Button","current","click","ImageSlider","Radial","Count","count","setLabelCount","changeCount","Dots","Mode","modes","mb","FormControl","fullWidth","InputLabel","Select","label","MenuItem","find","child","SettingsContainer","spacing","padding","justifyContent","gutterBottom","SettingsOverlay","Box","position","top","left","maxWidth","SettingsRef","React","forwardRef","props","AnimatedSettingsOverlay","active","Slide","timeout","enter","exit","easing","in","appear","mountOnEnter","unmountOnExit","useWindowSize","innerWidth","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useCanvas","draw","displayImage","setdisplayImage","canvasRef","animationFrameId","context","getContext","frameCount","src","Promise","resolve","reject","Image","then","render","requestAnimationFrame","cancelAnimationFrame","getRadius","canvas","realRadius","sqrt","getRealRadius","colorStopWidth","radius","getColorStopWidth","getSpeed","addColorStops","gradient","i","colorOffset","addColorStop","createGradientType","x1","cos","y1","sin","x2","y2","createLinearGradient","getLinearGradient","Vector2","x","y","this","vector2","Dot","pos","vel","add","limit","fillStyle","beginPath","arc","fill","createDot","canv","h","v","r","g","b","f","p","q","t","get","num","res","hsvToRgb","maxDistance","lastSpeed","updateDots","updateCount","dot","setVelocity","initDots","update","fillRect","lineWidth","point1","j","point2","distance","alpha","strokeStyle","moveTo","lineTo","stroke","Connect","createFillStyle","createGradient","createBlinking","createRadialGradient","getRadialGradient","createRadial","createPattern","getImagePattern","createImageSlider","getDrawType","drawUpdate","CanvasUpdate","font","textAlign","fillText","drawDefault","drawDebug","Canvas","useTimer","callback","requestRef","previousTimeRef","animate","time","undefined","deltaTime","ImageDisplay","winWidth","winHeight","offset","setOffset","dt","prev","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","Display","MainContainer","setCheck","bottom","theme","createTheme","palette","App","store","StrictMode","ThemeProvider","CssBaseline","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3c9047bc.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst configSlice = createSlice({\r\n    name: \"config\",\r\n    initialState: {\r\n        debug: false,\r\n        mode: \"dots\",\r\n        speed: 100,\r\n        rotation: (Math.PI * 5) / 8, //radians\r\n        colors: [\r\n            \"#FF0000\", // Red\r\n            \"#FFA500\", // Orange\r\n            \"#FFFF00\", // Yellow\r\n            \"#008000\", // Green\r\n            \"#0000FF\", // Blue\r\n            \"#4B0082\", // Indigo\r\n            \"#EE82EE\", // Violet\r\n        ],\r\n        imageUrl: null,\r\n        dotsCount: 130,\r\n        dotsMaxDistance: 120,\r\n    },\r\n    reducers: {\r\n        setImageUrl: (state, { payload }) => {\r\n            state.imageUrl = payload;\r\n        },\r\n\r\n        /*\r\n            Should add a smooth transition between colors\r\n            https://stackoverflow.com/questions/30196043/how-to-display-a-smoother-gradient-in-html5-canvas\r\n            https://stackoverflow.com/questions/21835739/smooth-color-transition-algorithm\r\n        */\r\n\r\n        setColors: (state, { payload }) => {\r\n            state.colors = payload;\r\n        },\r\n        addColor: (state, { payload }) => {\r\n            state.colors.push(payload);\r\n        },\r\n        setColorByIndex: (state, { payload }) => {\r\n            state.colors[payload.index] = payload.color;\r\n        },\r\n        deleteColorByIndex: (state, { payload }) => {\r\n            state.colors.splice(payload, 1);\r\n        },\r\n\r\n        setMode: (state, { payload }) => {\r\n            state.mode = payload;\r\n        },\r\n        setSpeed: (state, { payload }) => {\r\n            state.speed = payload;\r\n        },\r\n        setRotation: (state, { payload }) => {\r\n            state.rotation = payload;\r\n        },\r\n\r\n        // TODO: change dotsCount to count\r\n        setCount: (state, { payload }) => {\r\n            state.dotsCount = payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setImageUrl, setMode, setSpeed, setRotation, addColor, setColorByIndex, deleteColorByIndex, setCount } =\r\n    configSlice.actions;\r\n\r\nexport default configSlice.reducer;\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport configReducer from \"./configSlice\";\r\n\r\nconst rootReducer = combineReducers({\r\n    config: configReducer,\r\n});\r\n\r\nconst storage = configureStore({\r\n    reducer: rootReducer,\r\n});\r\n\r\nexport default storage;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nimport { IconButton, TextField } from \"@mui/material\";\r\nimport { ListItem, ListItemText } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nimport { deleteColorByIndex, setColorByIndex } from \"../../../redux/configSlice\";\r\n\r\nconst isColor = (strColor) => {\r\n    const s = new Option().style;\r\n    s.color = strColor;\r\n    return s.color !== \"\";\r\n};\r\n\r\nconst changeColor = (dispatch, index, color, setError) => {\r\n    if (!isColor(color)) {\r\n        setError(true);\r\n        return;\r\n    }\r\n    setError(false);\r\n    dispatch(setColorByIndex({ index, color }));\r\n};\r\n\r\nconst ColorItem = ({ color, index, blockDelete }) => {\r\n    const [error, setError] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <ListItem disablePadding>\r\n            <Box\r\n                ml={1}\r\n                mr={1}\r\n                sx={{\r\n                    width: 70,\r\n                    height: 25,\r\n                    backgroundColor: color,\r\n                    border: 2,\r\n                    borderColor: \"#aaaaaa\",\r\n                    borderRadius: 2,\r\n                    \"&:hover\": {\r\n                        backgroundColor: color,\r\n                        opacity: [0.8, 0.8, 0.8],\r\n                    },\r\n                }}\r\n            />\r\n\r\n            <ListItemText>\r\n                <TextField\r\n                    onChange={({ target }) => changeColor(dispatch, index, target.value, setError)}\r\n                    id=\"standard-basic\"\r\n                    variant=\"standard\"\r\n                    color={error ? \"error\" : \"primary\"}\r\n                    defaultValue={color}\r\n                />\r\n            </ListItemText>\r\n            <IconButton\r\n                disabled={blockDelete}\r\n                onClick={() => {\r\n                    dispatch(deleteColorByIndex(index));\r\n                }}\r\n            >\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nexport default ColorItem;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nimport { Grid, IconButton } from \"@mui/material\";\r\nimport { List, Divider } from \"@mui/material\";\r\nimport { Collapse } from \"@mui/material\";\r\n\r\nimport { addColor } from \"../../../redux/configSlice\";\r\nimport ColorItem from \"./colorItem\";\r\n\r\nimport { TransitionGroup } from \"react-transition-group\";\r\n\r\nconst RandomColor = () => {\r\n    return (\r\n        \"#\" +\r\n        Math.floor(Math.random() * 16777215)\r\n            .toString(16)\r\n            .toUpperCase()\r\n    );\r\n};\r\n\r\nconst ColorsList = () => {\r\n    const config = useSelector((storage) => storage.config);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Grid item mt={-1}>\r\n            <Grid container direction=\"row\" alignItems=\"center\">\r\n                <Grid item>Colors</Grid>\r\n                <Grid item>\r\n                    <IconButton disabled={config.colors.length >= 9} onClick={() => dispatch(addColor(RandomColor()))}>\r\n                        <AddIcon />\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n            <List sx={{ width: \"100%\", bgcolor: \"#00000050\", borderRadius: 3 }}>\r\n                <TransitionGroup>\r\n                    {config.colors.map((color, index) => (\r\n                        <Collapse key={color}>\r\n                            {index !== 0 && <Divider />}\r\n                            <ColorItem blockDelete={config.colors.length < 2} color={color} index={index}></ColorItem>\r\n                        </Collapse>\r\n                    ))}\r\n                </TransitionGroup>\r\n            </List>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default ColorsList;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Checkbox, Typography, Grid, Slider } from \"@mui/material\";\r\n\r\nimport { setSpeed } from \"../../../redux/configSlice\";\r\n\r\n/*\r\n    f(x) = -x/max+1\r\n    gives a reverse coefficient map 0-100 -> 1-0\r\n\r\n    100 - 101.0102\r\n    150 - 151.5152\r\n    small modifications to make f(max) = 0.01\r\n*/\r\n\r\nfunction clamp(val, min, max) {\r\n    return Math.ceil(Math.floor(val, max), min);\r\n}\r\n\r\nconst getCoefficientFromSlider = (value, extreme) => -value / (extreme ? 151.5152 : 101.0102) + 1;\r\n\r\nconst changeSpeed = (newSliderValue, setSliderValue, dispatch, extreme, min, max) => {\r\n    if (extreme) min = 1;\r\n    setSliderValue(newSliderValue);\r\n    let coef = getCoefficientFromSlider(newSliderValue, extreme);\r\n    dispatch(setSpeed((max - min) * coef + min));\r\n};\r\n\r\nconst changeExtreme = (checked, setExtreme, sliderValue, setSliderValue, dispatch, min, max) => {\r\n    if (checked) sliderValue = clamp(sliderValue, 0, 150);\r\n    else sliderValue = clamp(sliderValue, 0, 100);\r\n    setExtreme(checked);\r\n    changeSpeed(sliderValue, setSliderValue, dispatch, checked, min, max);\r\n};\r\n\r\nconst Speed = ({ minVal, maxVal }) => {\r\n    minVal = minVal || 10;\r\n    maxVal = maxVal || 110;\r\n    const dispatch = useDispatch();\r\n    window.disp = dispatch;\r\n    window.ss = setSpeed;\r\n\r\n    const [extreme, setExtreme] = useState(false);\r\n    const [sliderValue, setSliderValue] = useState(50);\r\n    return (\r\n        <>\r\n            <Grid container direction=\"row\" alignItems=\"center\">\r\n                <Grid item>Speed</Grid>\r\n                <Grid item ml={1} mr={-1}>\r\n                    <Checkbox\r\n                        onChange={({ target }) =>\r\n                            changeExtreme(\r\n                                target.checked,\r\n                                setExtreme,\r\n                                sliderValue,\r\n                                setSliderValue,\r\n                                dispatch,\r\n                                minVal,\r\n                                maxVal\r\n                            )\r\n                        }\r\n                        color=\"error\"\r\n                        size=\"small\"\r\n                        checked={extreme}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography fontSize={10}>Extreme mode</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid mt={-1} item>\r\n                <Slider\r\n                    onChange={(e, value) => changeSpeed(value, setSliderValue, dispatch, extreme, minVal, maxVal)}\r\n                    defaultValue={sliderValue}\r\n                    min={0}\r\n                    max={extreme ? 150 : 100}\r\n                    step={1}\r\n                    value={sliderValue}\r\n                    valueLabelDisplay=\"auto\"\r\n                />\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Speed;\r\n","import ColorsList from \"../gradient/colorsAdder\";\r\nimport Speed from \"../common/speed\";\r\n\r\nconst Blinking = {\r\n    name: \"blinking\",\r\n    displayName: \"Blinking\",\r\n    children: [<Speed key={\"BlinkingSpeed\"} />, <ColorsList key={\"BlinkingColorsList\"} />],\r\n};\r\n\r\nexport default Blinking;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Grid, Slider } from \"@mui/material\";\r\n\r\nimport { setRotation } from \"../../../redux/configSlice\";\r\n\r\nconst getRotationLabel = (angle) => {\r\n    return `${angle.toFixed(2)} rad / ${((angle * 180) / Math.PI).toFixed(2)} degrees`;\r\n};\r\n\r\nconst changeRotation = (rotation, setRotationValue, dispatch) => {\r\n    setRotationValue(rotation);\r\n    dispatch(setRotation(rotation));\r\n};\r\n\r\nconst Rotation = () => {\r\n    const config = useSelector((storage) => storage.config);\r\n    const dispatch = useDispatch();\r\n    const [rotationValue, setRotationValue] = useState(config.rotation);\r\n    return (\r\n        <>\r\n            <Grid item>Rotation - {getRotationLabel(config.rotation)}</Grid>\r\n            <Grid item>\r\n                <Slider\r\n                    onChange={(e, value) => changeRotation(value, setRotationValue, dispatch)}\r\n                    defaultValue={rotationValue}\r\n                    min={0}\r\n                    max={Math.PI * 2}\r\n                    //step={Math.PI / 4}\r\n                    step={0.01}\r\n                    value={rotationValue}\r\n                    valueLabelDisplay=\"off\"\r\n                />\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Rotation;\r\n","import Rotation from \"../common/rotation\";\r\nimport Speed from \"../common/speed\";\r\nimport ColorsList from \"../gradient/colorsAdder\";\r\n\r\nconst Gradient = {\r\n    name: \"gradient\",\r\n    displayName: \"Gradient\",\r\n    children: [\r\n        <Speed key={\"GradientSpeed\"} />,\r\n        <Rotation key={\"GradientRotation\"} />,\r\n        <ColorsList key={\"GradientColorsList\"} />,\r\n    ],\r\n};\r\n\r\nexport default Gradient;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Button } from \"@mui/material\";\r\nimport { setImageUrl } from \"../../../redux/configSlice\";\r\n\r\nconst loadFile = (image, dispatch, currentUrl, setCurrentUrl) => {\r\n    if (currentUrl !== null) {\r\n        window.URL.revokeObjectURL(currentUrl);\r\n    }\r\n    let newUrl = window.URL.createObjectURL(image);\r\n    dispatch(setImageUrl(newUrl));\r\n    setCurrentUrl(newUrl);\r\n};\r\n\r\nconst FileUploader = () => {\r\n    const dispatch = useDispatch();\r\n    const [currentImageUrl, setCurrentImageUrl] = useState(null);\r\n\r\n    const uploadInputRef = useRef(null);\r\n    return (\r\n        <>\r\n            <input\r\n                ref={uploadInputRef}\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={({ target }) => loadFile(target.files[0], dispatch, currentImageUrl, setCurrentImageUrl)}\r\n                hidden\r\n            />\r\n            <Button onClick={() => uploadInputRef.current && uploadInputRef.current.click()} variant=\"outlined\">\r\n                Upload image\r\n            </Button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FileUploader;\r\n","import FileUploader from \"../imageSlider/fileUploader\";\r\nimport Speed from \"../common/speed\";\r\nimport Rotation from \"../common/rotation\";\r\n\r\nconst ImageSlider = {\r\n    name: \"image\",\r\n    displayName: \"Image\",\r\n    children: [\r\n        <Speed minVal={1} maxVal={200} key={\"ImageSpeed\"} />,\r\n        <Rotation key={\"ImageRotation\"} />,\r\n        <FileUploader key={\"ImageFileUploader\"} />,\r\n    ],\r\n};\r\n\r\nexport default ImageSlider;\r\n","import ColorsList from \"../gradient/colorsAdder\";\r\nimport Speed from \"../common/speed\";\r\n\r\nconst Radial = {\r\n    name: \"radial\",\r\n    displayName: \"Radial\",\r\n    children: [<Speed key={\"RadialSpeed\"} />, <ColorsList key={\"RadialColorsList\"} />],\r\n};\r\n\r\nexport default Radial;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Grid, Slider } from \"@mui/material\";\r\n\r\nimport { setCount } from \"../../../redux/configSlice\";\r\n\r\nconst changeCount = (count, setLabelCount, dispatch) => {\r\n    setLabelCount(count);\r\n    dispatch(setCount(count));\r\n};\r\n\r\nconst Count = () => {\r\n    const config = useSelector((storage) => storage.config);\r\n    const dispatch = useDispatch();\r\n    const [count, setCount] = useState(config.dotsCount);\r\n    return (\r\n        <>\r\n            <Grid item>Count - {config.dotsCount}</Grid>\r\n            <Grid item>\r\n                <Slider\r\n                    onChange={(e, value) => changeCount(value, setCount, dispatch)}\r\n                    defaultValue={count}\r\n                    min={1}\r\n                    max={200}\r\n                    step={1}\r\n                    value={count}\r\n                    valueLabelDisplay=\"off\"\r\n                />\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Count;\r\n","import Speed from \"../common/speed\";\r\nimport Count from \"../common/count\";\r\n\r\nconst Dots = {\r\n    name: \"dots\",\r\n    displayName: \"Dots\",\r\n    children: [<Speed key={\"DotsSpeed\"} />, <Count key={\"DotsCount\"} />],\r\n};\r\n\r\nexport default Dots;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Grid, FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\r\n\r\nimport { setMode } from \"../../redux/configSlice\";\r\n\r\nimport Blinking from \"./modes/Blinking\";\r\nimport Gradient from \"./modes/Gradient\";\r\nimport ImageSlider from \"./modes/ImageSlider\";\r\nimport Radial from \"./modes/Radial\";\r\n\r\nimport Dots from \"./modes/Dots\";\r\n\r\nconst Mode = () => {\r\n    const config = useSelector((storage) => storage.config);\r\n    const dispatch = useDispatch();\r\n\r\n    let modes = [Blinking, Gradient, Radial, ImageSlider, Dots];\r\n\r\n    const changeMode = ({ target }) => dispatch(setMode(target.value));\r\n\r\n    return (\r\n        <>\r\n            <Grid item mb={1}>\r\n                <FormControl fullWidth>\r\n                    <InputLabel>Display mode</InputLabel>\r\n                    <Select value={config.mode} label=\"Display mode\" onChange={changeMode}>\r\n                        {modes.map((mode) => (\r\n                            <MenuItem key={mode.name} value={mode.name}>\r\n                                {mode.displayName}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            {modes.find((mode) => mode.name === config.mode).children.map((child) => child)}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Mode;\r\n","import React from \"react\";\r\n//import { useSelector, useDispatch } from \"react-redux\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\n\r\nimport Mode from \"./modeSelector\";\r\n\r\nconst SettingsContainer = () => {\r\n    //const config = useSelector((storage) => storage.config);\r\n    //const dispatch = useDispatch();\r\n    return (\r\n        <Grid container spacing={2} sx={{ padding: 2 }}>\r\n            <Grid container justifyContent=\"center\" item mb={-1}>\r\n                <Typography gutterBottom variant=\"h5\">\r\n                    Settings\r\n                </Typography>\r\n            </Grid>\r\n\r\n            <Grid container direction=\"column\" item>\r\n                <Mode />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default SettingsContainer;\r\n","import React from \"react\";\r\nimport { Box, Slide } from \"@mui/material\";\r\nimport SettingsContainer from \"./SettingsContainer\";\r\n\r\nconst SettingsOverlay = () => {\r\n    return (\r\n        <Box\r\n            sx={{\r\n                position: \"absolute\",\r\n                top: 7,\r\n                left: 7,\r\n                width: \"100%\",\r\n                maxWidth: 350,\r\n                backgroundColor: \"#101020a0\",\r\n                borderRadius: 3,\r\n            }}\r\n        >\r\n            <SettingsContainer />\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst SettingsRef = React.forwardRef((props, ref) => {\r\n    return (\r\n        <div ref={ref} {...props}>\r\n            <SettingsOverlay />\r\n        </div>\r\n    );\r\n});\r\n\r\nconst AnimatedSettingsOverlay = ({ active }) => {\r\n    return (\r\n        <Slide\r\n            timeout={{ enter: 3e2, exit: 1e3 }}\r\n            easing={{ enter: \"cubic-bezier(0, 0.5, 1, 1)\" }}\r\n            direction=\"right\"\r\n            in={active}\r\n            appear={false}\r\n            mountOnEnter\r\n            unmountOnExit\r\n        >\r\n            <SettingsRef />\r\n        </Slide>\r\n    );\r\n};\r\n\r\nexport { AnimatedSettingsOverlay };\r\nexport default SettingsOverlay;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useWindowSize = () => {\r\n    const [windowSize, setWindowSize] = useState([window.innerWidth, window.innerHeight]);\r\n    useEffect(() => {\r\n        const handleResize = () => setWindowSize([window.innerWidth, window.innerHeight]);\r\n\r\n        window.addEventListener(\"resize\", () => handleResize());\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n\r\n    return windowSize;\r\n};\r\n\r\nexport default useWindowSize;\r\n","import { useState, useRef, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst createNewImage = (newUrl) => {\r\n    return new Promise((resolve, reject) => {\r\n        const image = new Image();\r\n        image.src = newUrl;\r\n        image.addEventListener(\"load\", (e) => {\r\n            resolve(image);\r\n        });\r\n    });\r\n};\r\n\r\nconst useCanvas = (draw) => {\r\n    const [displayImage, setdisplayImage] = useState(null);\r\n\r\n    const canvasRef = useRef(null);\r\n    const config = useSelector((storage) => storage.config);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext(\"2d\");\r\n        let frameCount = 0;\r\n        let animationFrameId;\r\n\r\n        if (config.imageUrl !== null && (displayImage === null || config.imageUrl !== displayImage.src)) {\r\n            createNewImage(config.imageUrl).then((image) => {\r\n                setdisplayImage(image);\r\n            });\r\n        }\r\n\r\n        const render = () => {\r\n            frameCount++;\r\n            draw(context, frameCount, config, displayImage);\r\n            animationFrameId = window.requestAnimationFrame(render);\r\n        };\r\n        render();\r\n\r\n        return () => {\r\n            window.cancelAnimationFrame(animationFrameId);\r\n        };\r\n    }, [draw, config, displayImage]);\r\n\r\n    return canvasRef;\r\n};\r\n\r\nexport default useCanvas;\r\n","const getRealRadius = (canvas) => {\r\n    return Math.sqrt(canvas.width ** 2 + canvas.height ** 2) / 2;\r\n};\r\n\r\nconst getColorStopWidth = (radius, colors) => {\r\n    return (radius * 2) / colors.length;\r\n};\r\n\r\nconst getRadius = (canvas, colors, mode) => {\r\n    //circumscribed circle around canvas rectangle\r\n    let realRadius = getRealRadius(canvas);\r\n\r\n    //how much space one color takes up\r\n    let colorStopWidth = getColorStopWidth(realRadius, colors);\r\n\r\n    let radius = 0;\r\n    if (mode === \"blinking\") {\r\n        // set circumscribed circle's radius to a color stop\r\n        radius = realRadius * colorStopWidth;\r\n    } else if (mode === \"gradient\" || mode === \"radial\") {\r\n        //increase circumscribed circle's radius by a color stop\r\n        radius = realRadius + colorStopWidth;\r\n    }\r\n\r\n    return radius;\r\n};\r\n\r\nconst getLinearGradient = (context, rotation, radius) => {\r\n    let canvas = context.canvas;\r\n    //calculate location of points on a circle based on rotation\r\n    let x1 = Math.cos(-rotation + Math.PI) * radius + canvas.width / 2;\r\n    let y1 = Math.sin(-rotation + Math.PI) * radius + canvas.height / 2;\r\n    let x2 = Math.cos(-rotation) * radius + canvas.width / 2;\r\n    let y2 = Math.sin(-rotation) * radius + canvas.height / 2;\r\n\r\n    return context.createLinearGradient(x1, y1, x2, y2);\r\n};\r\nconst getSpeed = (frameCount, speed) => frameCount / speed;\r\n\r\nconst addColorStops = (gradient, speed, colors) => {\r\n    for (let i = 0; i < colors.length; i++) {\r\n        let colorOffset = ((i + speed) % colors.length) / colors.length;\r\n        gradient.addColorStop(colorOffset, colors[i]);\r\n    }\r\n    return gradient;\r\n};\r\n\r\nconst createGradientType = (context, config, frameCount, mode) => {\r\n    let canvas = context.canvas;\r\n    const radius = getRadius(canvas, config.colors, mode);\r\n    const gradient = getLinearGradient(context, config.rotation, radius);\r\n\r\n    return addColorStops(gradient, getSpeed(frameCount, config.speed), config.colors);\r\n};\r\n\r\nexport { createGradientType, addColorStops, getSpeed, getRadius };\r\n\r\n/* ------------------------------ */\r\n\r\n/* BROKEN\r\nconst addColorStops = (gradient, speed, colors) => {\r\n    let minOffset = 1;\r\n    let baseColorIndex = null;\r\n\r\n    for (let i = 0; i < colors.length; i++) {\r\n        let colorOffset = ((i + speed) % colors.length) / colors.length;\r\n\r\n        if (colorOffset < minOffset) {\r\n            minOffset = colorOffset;\r\n            baseColorIndex = i;\r\n        }\r\n\r\n        gradient.addColorStop(colorOffset, colors[i]);\r\n    }\r\n    if (baseColorIndex + speed > 0.001) {\r\n        let baseIndex = (baseColorIndex - 1 + colors.length) % colors.length;\r\n        gradient.addColorStop(0, colors[baseIndex]);\r\n    }\r\n    return gradient;\r\n};\r\n*/\r\n\r\n/* ------------------------------ */\r\n","class Vector2 {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    add(vector2) {\r\n        this.x += vector2.x;\r\n        this.y += vector2.y;\r\n    }\r\n\r\n    limit(canvas) {\r\n        this.x = (this.x + canvas.width) % canvas.width;\r\n        this.y = (this.y + canvas.height) % canvas.height;\r\n    }\r\n}\r\n\r\nexport default Vector2;\r\n","import Vector2 from \"./Vector2\";\r\n\r\nclass Dot {\r\n    constructor(x, y, color) {\r\n        this.pos = new Vector2(x, y);\r\n        this.vel = new Vector2(Math.random() * 4 - 2, Math.random() * 4 - 2);\r\n\r\n        this.color = color || \"#000000\";\r\n    }\r\n\r\n    setVelocity(speed) {\r\n        let newSpeed = (100 - speed) / 90;\r\n        this.vel = new Vector2(Math.random() * 4 - 2, Math.random() * 4 - 2);\r\n    }\r\n\r\n    update(canvas) {\r\n        this.pos.add(this.vel);\r\n        this.pos.limit(canvas);\r\n    }\r\n\r\n    render(context) {\r\n        context.fillStyle = this.color;\r\n\r\n        context.beginPath();\r\n        context.arc(this.pos.x, this.pos.y, 4, 0, 2 * Math.PI);\r\n        context.fill();\r\n    }\r\n}\r\n\r\nfunction hsvToRgb(h, s, v) {\r\n    var r, g, b;\r\n\r\n    var i = Math.floor(h * 6);\r\n    var f = h * 6 - i;\r\n    var p = v * (1 - s);\r\n    var q = v * (1 - f * s);\r\n    var t = v * (1 - (1 - f) * s);\r\n\r\n    switch (i % 6) {\r\n        case 0: {\r\n            r = v;\r\n            g = t;\r\n            b = p;\r\n            break;\r\n        }\r\n        case 1: {\r\n            r = q;\r\n            g = v;\r\n            b = p;\r\n            break;\r\n        }\r\n        case 2: {\r\n            r = p;\r\n            g = v;\r\n            b = t;\r\n            break;\r\n        }\r\n        case 3: {\r\n            r = p;\r\n            g = q;\r\n            b = v;\r\n            break;\r\n        }\r\n        case 4: {\r\n            r = t;\r\n            g = p;\r\n            b = v;\r\n            break;\r\n        }\r\n        case 5: {\r\n            r = v;\r\n            g = p;\r\n            b = q;\r\n            break;\r\n        }\r\n    }\r\n\r\n    let get = (num) => {\r\n        let res = Math.floor(num).toString(16);\r\n        if (res.length < 2) res = \"0\" + res;\r\n        return res;\r\n    };\r\n\r\n    return \"#\" + get(r * 255) + get(g * 255) + get(b * 255);\r\n}\r\n\r\nconst createDot = (canv) => {\r\n    return new Dot(canv.width * Math.random(), canv.height * Math.random(), hsvToRgb(Math.random(), 1, 1));\r\n};\r\n\r\nexport { createDot };\r\n","import { createDot } from \"./Dots/Dot\";\r\n\r\nlet Dots = [];\r\nlet maxDistance = 120;\r\nlet lastSpeed = 0;\r\n\r\nconst initDots = (context, config) => {\r\n    Dots = [];\r\n    maxDistance = config.dotsMaxDistance;\r\n\r\n    for (let i = 0; i < config.dotsCount; i++) {\r\n        Dots.push(createDot(context.canvas));\r\n    }\r\n\r\n    // speed is broken\r\n    Dots.map((dot) => dot.setVelocity(config.speed));\r\n    lastSpeed = config.speed;\r\n};\r\n\r\nconst updateCount = (context, config) => {\r\n    if (Dots.length > config.dotsCount) {\r\n        Dots.length = config.dotsCount;\r\n    } else {\r\n        for (let i = Dots.length; i < config.dotsCount; i++) {\r\n            Dots.push(createDot(context.canvas));\r\n        }\r\n    }\r\n};\r\n\r\nconst Connect = (context) => {\r\n    for (let i = 0; i < Dots.length - 1; i++) {\r\n        let point1 = Dots[i];\r\n        for (let j = i + 1; j < Dots.length; j++) {\r\n            let point2 = Dots[j];\r\n            let distance = Math.sqrt((point2.pos.x - point1.pos.x) ** 2 + (point2.pos.y - point1.pos.y) ** 2);\r\n            if (distance < maxDistance) {\r\n                let alpha = Math.floor(255 - (255 * distance) / maxDistance).toString(16);\r\n                if (alpha.length < 2) alpha = \"0\" + alpha;\r\n\r\n                let color = context.createLinearGradient(point1.pos.x, point1.pos.y, point2.pos.x, point2.pos.y);\r\n                color.addColorStop(0, point1.color + alpha);\r\n                color.addColorStop(1, point2.color + alpha);\r\n\r\n                context.strokeStyle = color;\r\n                context.beginPath();\r\n                context.moveTo(point1.pos.x, point1.pos.y);\r\n                context.lineTo(point2.pos.x, point2.pos.y);\r\n                context.stroke();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst updateDots = (context, config) => {\r\n    if (Dots.length !== config.dotsCount) updateCount(context, config);\r\n    if (lastSpeed !== config.speed) initDots(context, config);\r\n    Dots.map((dot) => dot.update(context.canvas));\r\n\r\n    context.fillStyle = \"#000\";\r\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\r\n\r\n    context.fillStyle = \"#000000\";\r\n    context.lineWidth = 2;\r\n    Connect(context);\r\n\r\n    Dots.map((dot) => dot.render(context));\r\n};\r\n\r\nexport { updateDots };\r\n","import { createGradient } from \"./display modes/gradient\";\r\nimport { createBlinking } from \"./display modes/blinking\";\r\nimport { createRadial } from \"./display modes/radial\";\r\nimport { createImageSlider } from \"./PatternFactory\";\r\n\r\nimport { updateDots } from \"./display modes/dots\";\r\n\r\nconst drawDebug = (context, frameCount) => {\r\n    const canvas = context.canvas;\r\n    let radius = 80;\r\n    context.fillStyle = \"#ffffffa0\";\r\n    context.beginPath();\r\n    context.arc(\r\n        canvas.width - radius - 10,\r\n        canvas.height - radius - 10,\r\n        radius * Math.sin(frameCount * 0.05) ** 2,\r\n        0,\r\n        2 * Math.PI\r\n    );\r\n    context.fill();\r\n};\r\n\r\nconst drawDefault = (context) => {\r\n    const canvas = context.canvas;\r\n    context.fillStyle = \"black\";\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n    context.font = \"48px courier\";\r\n    context.textAlign = \"center\";\r\n    context.fillStyle = \"white\";\r\n    context.fillText(\"No input\", canvas.width / 2, canvas.height / 2);\r\n};\r\n\r\nconst createFillStyle = (context, config, frameCount, image) => {\r\n    switch (config.mode) {\r\n        case \"gradient\":\r\n            return createGradient(context, config, frameCount);\r\n        case \"blinking\":\r\n            return createBlinking(context, config, frameCount);\r\n        case \"radial\":\r\n            return createRadial(context, config, frameCount);\r\n        case \"image\": {\r\n            if (image !== null) return createImageSlider(context, image);\r\n            return null;\r\n        }\r\n        default: {\r\n            return null;\r\n        }\r\n    }\r\n};\r\n\r\nconst getDrawType = (mode) => {\r\n    switch (mode) {\r\n        case \"gradient\":\r\n        case \"blinking\":\r\n        case \"radial\":\r\n        case \"image\": {\r\n            return \"fillstyle\";\r\n        }\r\n\r\n        case \"dots\": {\r\n            return \"update\";\r\n        }\r\n\r\n        default: {\r\n            return \"unknown\";\r\n        }\r\n    }\r\n};\r\n\r\nconst drawUpdate = (context, config) => {\r\n    const canvas = context.canvas;\r\n    const type = getDrawType(config.mode);\r\n    if (type === \"fillstyle\") {\r\n        context.fillRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n    if (config.mode === \"dots\") {\r\n        updateDots(context, config);\r\n    }\r\n};\r\n\r\nconst CanvasUpdate = (context, frameCount, config, image) => {\r\n    drawDefault(context);\r\n\r\n    const type = getDrawType(config.mode);\r\n    if (type === \"fillstyle\") {\r\n        let fillStyle = createFillStyle(context, config, frameCount, image);\r\n        if (fillStyle !== null) {\r\n            context.fillStyle = fillStyle;\r\n            drawUpdate(context, config);\r\n        }\r\n    }\r\n    if (type === \"update\") {\r\n        drawUpdate(context, config);\r\n    }\r\n\r\n    if (config.debug) {\r\n        drawDebug(context, frameCount);\r\n    }\r\n};\r\n\r\nexport default CanvasUpdate;\r\n","import { createGradientType } from \"../GradientFactory\";\r\n\r\n//fix: Transition between colors is flickering when there are only few colors\r\nconst createGradient = (context, config, frameCount) => {\r\n    return createGradientType(context, config, frameCount, \"gradient\");\r\n};\r\n\r\nexport { createGradient };\r\n","import { createGradientType } from \"../GradientFactory\";\r\n\r\nconst createBlinking = (context, config, frameCount) => {\r\n    return createGradientType(context, config, frameCount, \"blinking\");\r\n};\r\n\r\nexport { createBlinking };\r\n","import { getRadius, addColorStops, getSpeed } from \"../GradientFactory\";\r\n\r\nconst getRadialGradient = (context, radius) => {\r\n    let canvas = context.canvas;\r\n    return context.createRadialGradient(\r\n        canvas.width / 2,\r\n        canvas.height / 2,\r\n        0,\r\n        canvas.width / 2,\r\n        canvas.height / 2,\r\n        radius\r\n    );\r\n};\r\n\r\nconst createRadial = (context, config, frameCount) => {\r\n    let canvas = context.canvas;\r\n    const radius = getRadius(canvas, config.colors, \"radial\");\r\n    const gradient = getRadialGradient(context, radius);\r\n\r\n    return addColorStops(gradient, getSpeed(frameCount, config.speed), config.colors);\r\n};\r\n\r\nexport { createRadial };\r\n","const getImagePattern = (context, image) => {\r\n    let pattern = context.createPattern(image, \"repeat\"); //change repeat to config.repetition pattern\r\n    return pattern;\r\n};\r\n\r\n/* ------------------------------ */\r\n\r\nconst createImageSlider = (context, image) => {\r\n    return getImagePattern(context, image);\r\n};\r\n\r\nexport { createImageSlider };\r\n","import React from \"react\";\r\nimport useWindowSize from \"./windowSize\";\r\n\r\nimport useCanvas from \"./useCanvas\";\r\n\r\nimport CanvasUpdate from \"../drawing/canvasUpdate\";\r\n\r\nconst Canvas = () => {\r\n    const [width, height] = useWindowSize();\r\n    const canvasRef = useCanvas(CanvasUpdate);\r\n\r\n    return <canvas ref={canvasRef} width={width} height={height} />;\r\n};\r\n\r\nexport default Canvas;\r\n","export default __webpack_public_path__ + \"static/media/city.ea63c51b.jpg\";","import React, { useEffect } from \"react\";\r\n\r\nconst useTimer = (callback) => {\r\n    const requestRef = React.useRef();\r\n    const previousTimeRef = React.useRef();\r\n\r\n    useEffect(() => {\r\n        const animate = (time) => {\r\n            if (previousTimeRef.current !== undefined) {\r\n                const deltaTime = time - previousTimeRef.current;\r\n                callback(deltaTime);\r\n            }\r\n            previousTimeRef.current = time;\r\n            requestRef.current = requestAnimationFrame(animate);\r\n        };\r\n\r\n        requestRef.current = requestAnimationFrame(animate);\r\n        return () => cancelAnimationFrame(requestRef.current);\r\n    }, [callback]);\r\n};\r\n\r\nexport default useTimer;\r\n","import React, { useState } from \"react\";\r\nimport useWindowSize from \"./windowSize\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nimport Image from \"../../../content/city.jpg\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useTimer from \"./useTimer\";\r\n\r\nconst ImageDisplay = () => {\r\n    const speed = useSelector((storage) => storage.config.speed);\r\n    const [winWidth, winHeight] = useWindowSize();\r\n    const [offset, setOffset] = useState(0);\r\n\r\n    useTimer((dt) => {\r\n        setOffset((prev) => {\r\n            return prev + speed / 500;\r\n        });\r\n    });\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                width: winWidth,\r\n                height: winHeight,\r\n                backgroundImage: `url(${Image})`,\r\n                backgroundSize: \"contain\",\r\n                backgroundPosition: offset + \"%\",\r\n                backgroundRepeat: \"repeat\",\r\n                //transform: \"rotate(20deg)\",\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ImageDisplay;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Canvas from \"./Canvas\";\r\nimport ImageDisplay from \"./ImageDisplay\";\r\n\r\nconst Display = () => {\r\n    const mode = useSelector((storage) => storage.config.mode);\r\n    if (mode === \"image\") return <ImageDisplay />;\r\n    return <Canvas />;\r\n};\r\n\r\nexport default Display;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AnimatedSettingsOverlay } from \"./settings/SettingsOverlay\";\r\nimport Display from \"./display/canvas/Display\";\r\nimport { Checkbox } from \"@mui/material\";\r\n\r\nconst MainContainer = () => {\r\n    const [checked, setCheck] = useState(true);\r\n    return (\r\n        <div>\r\n            <Checkbox\r\n                sx={{\r\n                    position: \"absolute\",\r\n                    bottom: 7,\r\n                    left: 7,\r\n                }}\r\n                checked={checked}\r\n                onChange={({ target }) => setCheck(target.checked)}\r\n            />\r\n            <AnimatedSettingsOverlay active={checked} />\r\n            <Display />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { CssBaseline, ThemeProvider, createTheme } from \"@mui/material\";\n\nimport { Provider } from \"react-redux\";\nimport storage from \"./redux/store\";\n\nimport MainContainer from \"./components/MainContainer\";\n\nconst theme = createTheme({\n    palette: {\n        mode: \"dark\",\n    },\n    spacing: 8,\n});\n\nconst App = () => {\n    return (\n        <Provider store={storage}>\n            <React.StrictMode>\n                <ThemeProvider theme={theme}>\n                    <CssBaseline />\n\n                    <MainContainer />\n                </ThemeProvider>\n            </React.StrictMode>\n        </Provider>\n    );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}